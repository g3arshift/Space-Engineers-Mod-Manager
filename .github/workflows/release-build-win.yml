name: Release build

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'

permissions:
  contents: read

jobs:
  build-gradle-project:
    runs-on: windows-latest
    permissions:
      packages: write
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
          java-package: 'jdk+fx'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: '8.5'

      - name: Read app version
        uses: kurt-code/gha-properties@v0.0.1
        id: read-properties
        with:
          operation: 'read'
          file-path: 'src/main/resources/version.properties'
          keys: 'version'
      - name: Save app version
        run: Add-Content -Path ${env:GITHUB_ENV} -Value "VERSION_INFORMATION=${{ steps.read-properties.outputs.version }}"

      - name: Check if version is already released
        id: check-version
        shell: pwsh
        run: |
          echo "Current Version: $env:VERSION_INFORMATION"
                
          $latestTag = git describe --tags --abbrev=0
          echo "Latest Tag: $latestTag"
                
          if($env:VERSION_INFORMATION -eq $latestTag) {
            echo "Version $env:VERSION_INFORMATION already released. Skipping build."
            echo "SHOULD_SKIP=true" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
            exit 0
          }

      - name: Build with Gradle
        if: ${{ env.SHOULD_SKIP != 'true' }}
        run: gradle build -x test

      - name: Change wrapper permissions
        if: ${{ env.SHOULD_SKIP != 'true' }}
        run: powershell Set-ExecutionPolicy Unrestricted -Scope Process -Force; ./gradlew.bat

      - name: Make fat jar
        if: ${{ env.SHOULD_SKIP != 'true' }}
        run: ./gradlew shadowJar

      - name: Run tests
        if: ${{ env.SHOULD_SKIP != 'true' }}
        run: ./gradlew remoteTest

      - name: Remove unneeded browser binaries
        if: ${{ env.SHOULD_SKIP != 'true' }}
        run: ./gradlew removeForeignOsBrowsers

      - name: Build Release
        if: ${{ env.SHOULD_SKIP != 'true' }}
        run: |
          jpackage --input build\libs --name "Space Engineers Mod Manager-v${{ env.VERSION_INFORMATION }}" --main-jar Space-Engineers-Mod-Manager-${{ env.VERSION_INFORMATION }}.jar --main-class com.gearshiftgaming.se_mod_manager.SpaceEngineersModManager --type app-image --app-version ${{ env.VERSION_INFORMATION }} --icon "src\main\resources\icons\logo.ico" --vendor "Gear Shift Gaming"

      - name: Archive Release
        if: ${{ env.SHOULD_SKIP != 'true' }}
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: "zip"
          directory: Space Engineers Mod Manager-v${{ env.VERSION_INFORMATION }}
          filename: "SEMM-v${{ env.VERSION_INFORMATION }}-win.zip"

      - name: Upload Release
        if: ${{ env.SHOULD_SKIP != 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          tag_name: ${{ env.VERSION_INFORMATION }}
          files: |
            Space Engineers Mod Manager-v${{ env.VERSION_INFORMATION }}/SEMM-v${{ env.VERSION_INFORMATION }}-win.zip
            build/libs/Space-Engineers-Mod-Manager-${{ env.VERSION_INFORMATION }}.jar
          body: "To use, extract the .zip folder to a directory and run the executable. Alternatively, you can download the .jar file and run standalone. You don't have to have Java installed for the .exe to run, but running the .jar will require Java21 and JavaFX.\n\n"
          generate_release_notes: true
          make_latest: true